
cache:
  - C:\downloads\hunspell-1.3.3.tar.gz

environment:
  fast_finish: true
  matrix:
    - ARCH: x86
      CPUBIT: 32
      CYGWIN: C:\Cygwin
      CYGSH: C:\Cygwin\bin\bash -lc
      VCVARS: vcvars32.bat
      GENERATOR: "Visual Studio 14 2015"
    - ARCH: x86_64
      CPUBIT: 64
      CYGWIN: C:\Cygwin64
      CYGSH: C:\Cygwin64\bin\bash -lc
      VCVARS: amd64\vcvars64.bat
      GENERATOR: "Visual Studio 14 2015 Win64"

install:
  - "\"%VS140COMNTOOLS:~0,-14%VC\\bin\\\"%VCVARS%"
  - "echo \"%VS140COMNTOOLS:~0,-14%VC\\bin\\\"%VCVARS%"
  # Install Opam prerequisites
  # - "%CYGWIN%\\setup-%ARCH%.exe -qnNdO -R %CYGWIN% -s http://cygwin.mirror.constant.com -l %CYGWIN%/var/cache/setup -P patch -P unzip -P curl"
  # Get sources
  - cd C:\
  - if not exist downloads mkdir downloads
  - cd downloads
  - if not exist hunspell-1.3.3.tar.gz curl -L "https://sourceforge.net/projects/hunspell/files/Hunspell/1.3.3/hunspell-1.3.3.tar.gz" -O
  # Install Opam
  # - cd C:\
  # - if not exist ocaml mkdir ocaml
  # - cd ocaml
  # - if not exist opam%CPUBIT%.tar.xz curl -L -O https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.1/opam%CPUBIT%.tar.xz
  # - 7z -y e opam%CPUBIT%.tar.xz && 7z -y x opam%CPUBIT%.tar
  # - "%CYGSH% 'cd /cygdrive/c/ocaml ; opam%CPUBIT%/install.sh'"
  # Install OCaml
  # - "%CYGSH% 'opam init -y mingw https://github.com/fdopen/opam-repository-mingw.git --comp 4.04.0+mingw%CPUBIT% --switch 4.04.0+mingw%CPUBIT%'"
  # - "%CYGSH% 'PATH=$(dirname \"`which cl`\"):$PATH opam init -y mingw https://github.com/fdopen/opam-repository-mingw.git --comp 4.04.0+msvc%CPUBIT% --switch 4.04.0+msvc%CPUBIT%'"
  # - "%CYGSH% 'cat ~/.opam/opam-init/*.sh'"
  # - "%CYGSH% 'ocaml-env exec -- ocamlc -config'"
  - cd "%APPVEYOR_BUILD_FOLDER%"
  - if not exist dependenciesbuild mkdir dependenciesbuild
  - subst V: "%APPVEYOR_BUILD_FOLDER%"\dependenciesbuild
  - cmd: >-
      subst V: dependenciesbuild

  - cd V:\
  - 7z -y x C:\downloads\hunspell-1.3.3.tar.gz -so | 7z x -aoa -si -ttar
  # - if not exist ocpwin mkdir ocpwin
  # - cd ocpwin
  # - echo get "%OCPWIN_ARCHIVE%" from "%OCPWIN_URL%"
  # - if not exist "%OCPWIN_ARCHIVE%" curl -O "%OCPWIN_URL%"
  # - 7z -y x "%OCPWIN_ARCHIVE%"
  # - echo enter in "%OCPWIN_DIR%"
  # - cd "%OCPWIN_DIR%"
  # - bin\ocpwin -list
  # - bin\ocpwin -in
  # - refreshenv
  # - cd "%APPVEYOR_BUILD_FOLDER%"

configuration:
  - Release

image:
  - Visual Studio 2015
#  - Visual Studio 2017

before_build:
  # - cd C:\
  # - mkdir downloads
  # - cd downloads
  # - curl -L 'https://sourceforge.net/projects/hunspell/files/Hunspell/1.3.3/hunspell-1.3.3.tar.gz' -O
  # - "%CYGSH% 'cd `cygpath \"%APPVEYOR_BUILD_FOLDER%\"`; cd tmp-build; ocaml-env exec -- cmake .. -G \"%GENERATOR%\" -DCMAKE_VERBOSE_MAKEFILE=on -DCMAKE_INSTALL_PREFIX:PATH=install -DCMAKE_OCaml_FLAGS=-verbose -DCMAKE_OCaml_LINKER_FLAGS=-verbose'"

build_script:
  # - "%CYGSH% 'cd `cygpath \"%APPVEYOR_BUILD_FOLDER%\"`; cd tmp-build; ocaml-env exec -- cmake --build . --config %CONFIGURATION% -- /verbosity:detailed'"
  # - "%CYGSH% 'cd `cygpath \"%APPVEYOR_BUILD_FOLDER%\"`; find'"

#test_script:
#  - "%CYGSH% 'cd `cygpath \"%APPVEYOR_BUILD_FOLDER%\"`; cd tmp-build; if ! ctest; then cat Testing/Temporary/LastTest.log; exit 1; fi'"
